interface Animal {
  species: String
  age: Float
  weight: Float
  sound: String
}

type Carnivorous implements Animal{
  species: String
  age: Float
  weight: Float
  sound: String
  favoriteFood: String
}

type Herbivorous implements Animal{
  species: String
  age: Float
  weight: Float
  sound: String
  favoritePlant: String
}

type Insect implements Animal{
  species: String
  age: Float
  weight: Float
  sound: String
  eatsInsects: Boolean
  favoriteFood: String
}

input HerbivorousInput {
  favoritePlant: String
}

input CarnivorousInput {
  favoriteFood: String
}

input InsectInput {
  eatsInsects: Boolean
  favoriteFood: String
}

type Query {
  animalsDeprecated: [Animal] @deprecated(reason: "Use animals instead.")
  animals: [Animal]
  animal(species: String!): Animal
  makeSound(species: String!): String
}

type Mutation {
  addAnimal(
    species: String!,
    age: Float!,
    weight: Float!,
    sound: String!,
    herbivorous: HerbivorousInput,
    favoriteFood: String,
    insect: InsectInput
  ): Animal

  setAnimal(
    species: String!,
    age: Float,
    weight: Float,
    sound: String,
    herbivorous: HerbivorousInput,
    carnivorous: CarnivorousInput,
    insect: InsectInput
  ): Animal

  deleteAnimal(species: String!): Boolean
}
