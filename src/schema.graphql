interface Animal {
  species: String
  age: Int
  weight: Float
  sound: String
}

interface Carnivorous {
  huntingMethod: String
}

interface Herbivorous {
  favoritePlant: String
}

interface Insect {
  eatsInsects: Boolean
  favoriteFood: String
}

input HerbivorousInput {
  favoritePlant: String
}

input CarnivorousInput {
  huntingMethod: String
}

input InsectInput {
  eatsInsects: Boolean
  favoriteFood: String
}

type CarnivorousAnimal implements Animal & Carnivorous {
  species: String
  age: Int
  weight: Float
  sound: String
  huntingMethod: String
}

type HerbivorousAnimal implements Animal & Herbivorous {
  species: String
  age: Int
  weight: Float
  sound: String
  favoritePlant: String
}

type InsectAnimal implements Animal & Insect {
  species: String
  age: Int
  weight: Float
  sound: String
  eatsInsects: Boolean
  favoriteFood: String
}

type Query {
  animalsDeprecated: [Animal] @deprecated(reason: "Use animals instead.")
  animals: [Animal]
  animal(species: String!): Animal
  makeSound(species: String!): String
}

type Mutation {
  addAnimal(
    species: String!,
    age: Int!,
    weight: Float!,
    sound: String!,
    herbivorous: HerbivorousInput,
    carnivorous: CarnivorousInput,
    insect: InsectInput
  ): Animal

  setAnimal(
    species: String!,
    age: Int,
    weight: Float,
    sound: String,
    herbivorous: HerbivorousInput,
    carnivorous: CarnivorousInput,
    insect: InsectInput
  ): Animal

  deleteAnimal(species: String!): Boolean
}
